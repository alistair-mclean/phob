{"ast":null,"code":"var _jsxFileName = \"/home/alistair/practice/react/typescript-test/src/components/organismConfig/Organism.tsx\";\nimport React from 'react';\nexport default class Organism extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props) {\n      const _this$props = this.props,\n            organismName = _this$props.organismName,\n            isSelected = _this$props.isSelected;\n      this.state = {\n        organismName,\n        isSelected\n      };\n    } else {\n      this.state = {\n        organismName: '',\n        isSelected: false\n      };\n    }\n  }\n\n  render() {\n    console.log('@ @ @ organism render called: ', this.props.organismName);\n    return React.createElement(\"div\", {\n      className: \"organism\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.organismName, React.createElement(\"button\", {\n      className: \"remove\",\n      onClick: removeOrganism,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"-\"));\n  }\n\n}\n\nfunction removeOrganism() {\n  console.log('! ! ! remove organism called');\n}\n\nexport const FuncOrganism = (organismName, index) => React.createElement(\"div\", {\n  className: \"organism\",\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"here's an organism\"), organismName, React.createElement(\"button\", {\n  className: \"remove\",\n  onClick: removeOrganism,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"-\"));","map":{"version":3,"sources":["/home/alistair/practice/react/typescript-test/src/components/organismConfig/Organism.tsx"],"names":["React","Organism","Component","constructor","props","organismName","isSelected","state","render","console","log","removeOrganism","FuncOrganism","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAA2D;AACtEC,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC7B,UAAMA,KAAN;;AACA,QAAIA,KAAJ,EAAW;AAAA,0BAC8B,KAAKA,KADnC;AAAA,YACCC,YADD,eACCA,YADD;AAAA,YACeC,UADf,eACeA,UADf;AAEP,WAAKC,KAAL,GAAa;AACTF,QAAAA,YADS;AAETC,QAAAA;AAFS,OAAb;AAIH,KAND,MAMO;AACH,WAAKC,KAAL,GAAa;AACTF,QAAAA,YAAY,EAAE,EADL;AAETC,QAAAA,UAAU,EAAE;AAFH,OAAb;AAIH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKN,KAAL,CAAWC,YAAzD;AACA,WACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWC,YADhB,EAC6B;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEM,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD7B,CADA;AAKH;;AAxBqE;;AA2B1E,SAASA,cAAT,GAA0B;AACtBF,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;;AAED,OAAO,MAAME,YAAY,GAAG,CAAEP,YAAF,EAAyBQ,KAAzB,KACxB;AAAK,EAAA,SAAS,EAAC,UAAf;AAA0B,EAAA,GAAG,EAAEA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAECR,YAFD,EAEc;AAAQ,EAAA,SAAS,EAAC,QAAlB;AAA2B,EAAA,OAAO,EAAEM,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFd,CADG","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport OrganismConfigPanel from './OrganismConfigPanel';\n\ntype OrganismProps = {\n    organismName: string,\n    isSelected: boolean,\n}\nexport default class Organism extends React.Component<any, OrganismProps> {\n    constructor(props:OrganismProps) {\n        super(props);\n        if (props) {\n            const { organismName, isSelected } = this.props;\n            this.state = {\n                organismName,\n                isSelected,\n            };\n        } else {\n            this.state = {\n                organismName: '',\n                isSelected: false,\n            };\n        }\n    }\n\n    render (){\n        console.log('@ @ @ organism render called: ', this.props.organismName);\n        return (\n        <div className='organism'>\n            {this.props.organismName}<button className='remove' onClick={removeOrganism}>-</button>\n        </div>\n        )\n    }\n}\n\nfunction removeOrganism() {\n    console.log('! ! ! remove organism called');\n}\n\nexport const FuncOrganism = ( organismName: string , index: number) => (\n    <div className='organism' key={index}>\n    <p>here's an organism</p>\n    {organismName}<button className='remove' onClick={removeOrganism}>-</button>\n</div>\n)\n\n"]},"metadata":{},"sourceType":"module"}