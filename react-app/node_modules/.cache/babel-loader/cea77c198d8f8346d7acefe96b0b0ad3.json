{"ast":null,"code":"var _jsxFileName = \"/home/alistair/practice/react/typescript-test/src/components/config/ConfigPanel.tsx\";\nimport React from 'react';\nimport OrganismList from './OrganismList';\n\nclass ConfigPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        selectedOrganism: event.target.value\n      });\n      console.log('! ! ! this.state', this.state);\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        selectedOrganism: '',\n        organisms: [...this.state.organisms, this.state.selectedOrganism]\n      });\n    };\n\n    this.state = {\n      organisms: [],\n      selectedOrganism: '',\n      organismConfigs: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"This is the config Panel\"), React.createElement(OrganismList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ConfigPanel;","map":{"version":3,"sources":["/home/alistair/practice/react/typescript-test/src/components/config/ConfigPanel.tsx"],"names":["React","OrganismList","ConfigPanel","Component","constructor","props","onChange","event","setState","selectedOrganism","target","value","console","log","state","onSubmit","preventDefault","organisms","organismConfigs","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAOA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA+D;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC7B,UAAMA,KAAN;;AAD6B,SAQjCC,QARiC,GAQrBC,KAAD,IAA4C;AACnD,WAAKC,QAAL,CAAc;AAACC,QAAAA,gBAAgB,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAhC,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKC,KAArC;AACH,KAXgC;;AAAA,SAajCC,QAbiC,GAarBR,KAAD,IAA4C;AACnDA,MAAAA,KAAK,CAACS,cAAN;AACA,WAAKR,QAAL,CAAc;AACVC,QAAAA,gBAAgB,EAAE,EADR;AAEVQ,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,SAAf,EAA0B,KAAKH,KAAL,CAAWL,gBAArC;AAFD,OAAd;AAIH,KAnBgC;;AAE7B,SAAKK,KAAL,GAAa;AACTG,MAAAA,SAAS,EAAE,EADF;AAETR,MAAAA,gBAAgB,EAAE,EAFT;AAGTS,MAAAA,eAAe,EAAE;AAHR,KAAb;AAKH;;AAaDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA5B0D;;AA+B/D,eAAejB,WAAf","sourcesContent":["import React from 'react';\nimport OrganismList from './OrganismList';\n\ntype ConfigPanelState = {\n    organisms: Array<string>, \n    selectedOrganism: string,\n    organismConfigs: {}, \n}\nclass ConfigPanel extends React.Component<{}, ConfigPanelState>{\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.state = {\n            organisms: [],\n            selectedOrganism: '',\n            organismConfigs: {},\n        }\n    }\n    onChange = (event: { target: { value: string; }; }) => {\n        this.setState({selectedOrganism: event.target.value});\n        console.log('! ! ! this.state', this.state);\n    }\n\n    onSubmit = (event: { preventDefault: () => void; }) => {\n        event.preventDefault()\n        this.setState({\n            selectedOrganism: '',\n            organisms: [...this.state.organisms, this.state.selectedOrganism],\n        });\n    }\n    render() {\n        return (\n            <div>\n                <h1>This is the config Panel</h1>\n                <OrganismList />\n            </div>\n        )\n    }\n}\n\nexport default ConfigPanel;"]},"metadata":{},"sourceType":"module"}